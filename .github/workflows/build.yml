name: Build docker-manager

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read VERSION file
        id: read_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Build binaries for Windows AMD64
        run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o build/docker-manager_windows_amd64.exe

      - name: Build binaries for Windows 386
        run: CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o build/docker-manager_windows_386.exe

      - name: Build binaries for Linux AMD64
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o build/docker-manager_linux_amd64

      - name: Build binaries for Linux 386
        run: CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o build/docker-manager_linux_386

      - name: Build binaries for Linux ARM64
        run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o build/docker-manager_linux_arm64

      - name: Build binaries for Darwin AMD64
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o build/docker-manager_darwin_amd64

      - name: Build binaries for Darwin ARM64
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o build/docker-manager_darwin_arm64

      - name: Compress binaries with UPX
        run: |
          find build/ -type f ! -name '*darwin*' -exec upx --best --lzma {} +

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.read_version.outputs.version }}
          release_name: Release ${{ steps.read_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in build/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
                gh release upload ${{ steps.read_version.outputs.version }} "$file" --repo ${{ github.repository }}
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read VERSION file
        id: read_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/docker-manager:latest
            ${{ secrets.DOCKER_USERNAME }}/docker-manager:${{ steps.read_version.outputs.version }}
